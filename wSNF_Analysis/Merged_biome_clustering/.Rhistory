?SNF_weighted_iter
source("function_snf.R")
?SNF_weighted_iter
library("SNFtool")
library("vegan")
source("function_snf.R")
library("reticulate")
use_python("/usr/local/bin/python")
source_python("sil.py")
b_data=read.csv("./../../Data/bacteria.csv",row.names = 1)
b_data=read.csv("./../Data/bacteria.csv",row.names = 1)
f_data=read.csv("./../Data/fungi.csv",row.names = 1)
v_data=read.csv("./../Data/virus.csv",row.names = 1)
#Filter and finding the weights
list_sel=list()
b_data=read.csv("./../../Data/bacteria.csv",row.names = 1)
f_data=read.csv("./../../Data/fungi.csv",row.names = 1)
v_data=read.csv("./../../Data/virus.csv",row.names = 1)
b_data=read.csv("./../../Data/bacteria.csv",row.names = 1)
b_data=read.csv("./../../Data/1_Targeted/bacteria.csv",row.names = 1)
f_data=read.csv("./../../Data/1_Targeted/fungi.csv",row.names = 1)
v_data=read.csv("./../../Data/1_Targeted/virus.csv",row.names = 1)
#Filterting the dataset
list_sel=list()
count=1
for (d in list(b_data,f_data,v_data)){
z=colSums(d>0)
sel_col=row.names(as.data.frame(z[z>=10])) #In 5% patients prevalent
#print(sel_col)
list_sel[[count]]<-sel_col
count=count+1
}
b_data<-b_data[,list_sel[[1]]]
f_data<-f_data[,list_sel[[2]]]
v_data<-v_data[,list_sel[[3]]]
remove(d,list_sel,count,sel_col,z)
b_data
write.csv(b_data,"~/OneDrive/3.SNF/Submission/Nature_Medicine_Resubmission/Web-tool/Demo_Data/bacteria.csv")
write.csv(f_data,"~/OneDrive/3.SNF/Submission/Nature_Medicine_Resubmission/Web-tool/Demo_Data/fungi.csv")
write.csv(v_data,"~/OneDrive/3.SNF/Submission/Nature_Medicine_Resubmission/Web-tool/Demo_Data/virus.csv")
q()
